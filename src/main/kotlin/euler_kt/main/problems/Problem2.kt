/*
 * This file is part of euler-kt
 * Copyright (C) 2023 Bill Kozak
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package euler_kt.main.problems

import euler_kt.main.framework.EulerProblem
import org.openjdk.jmh.annotations.Scope
import org.openjdk.jmh.annotations.State

@State(Scope.Thread)
open class Problem2(override val defaultKeyParam: Long = 4000000) : EulerProblem<Long, Long> {

        override fun description(): String {
            return (
                "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting" +
                " with 1 and 2, the first 10 terms will be:\n\n" +
                " 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n\n" +
                "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the" +
                " sum of the even-valued terms."
            )
        }

        override fun run(keyParam: Long): Long {
            if(keyParam < 2) {
                return 0L
            }

            var sum = 2L
            var a = 8L
            var b = 2L

            var tmp: Long

            while (a < keyParam) {
                sum += a

                tmp = a
                a = 4 * a + b
                b = tmp
            }

            return sum
        }

        override fun validate(result: Number): Boolean {
            return result.toLong() == 4613732L
        }
}